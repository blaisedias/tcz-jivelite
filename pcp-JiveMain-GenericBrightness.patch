diff --git a/share/jive/jive/JiveMain.lua b/share/jive/jive/JiveMain.lua
index a7e4ec2..51ed1a2 100644
--- share/jive/jive/JiveMain.lua
+++ share/jive/jive/JiveMain.lua
@@ -18,6 +18,9 @@ JiveMainMenu notifies any change with mainMenuUpdate
 =cut
 --]]
 
+-----------------------------------------------------------------------------------------
+local io            = require("io")
+-----------------------------------------------------------------------------------------
 
 -- stuff we use
 local math          = require("math")
@@ -195,7 +198,21 @@ function JiveMain:setSoftPowerState(softPowerState, isServerRequest)
 		--already in the desired state, leave (can happen for instance when notify_playerPower comes back after a local power change)
 		 return
 	end
+-----------------------------------------------------------------------------------------
+	local isPiDisplay = _read("/sys/class/backlight/rpi_backlight/brightness")
+--Generic brightness script
+	local lcdscript="/home/tc/lcd-brightness.sh"
+	
+	local backlightBrightness = appletManager:callService("getBacklightBrightnessWhenOn")
+	if backlightBrightness == nil then
+		backlightBrightness = "255"
+	end
 
+	local reducedBacklightBrightness = appletManager:callService("getBacklightBrightnessWhenOff")
+	if reducedBacklightBrightness == nil then
+		reducedBacklightBrightness = "130"
+	end
+-----------------------------------------------------------------------------------------
 	_softPowerState = softPowerState
 	local currentPlayer = appletManager:callService("getCurrentPlayer")
 	if _softPowerState == "off" then
@@ -203,6 +220,14 @@ function JiveMain:setSoftPowerState(softPowerState, isServerRequest)
 		if currentPlayer and (currentPlayer:isConnected() or currentPlayer:isLocal()) then
 			currentPlayer:setPower(false, nil, isServerRequest)
 		end
+-----------------------------------------------------------------------------------------
+		if isPiDisplay ~= nil then 
+			_write("/sys/class/backlight/rpi_backlight/brightness", reducedBacklightBrightness)
+--Generic brightness script
+		elseif _file_exists(lcdscript) then
+			os.execute(lcdscript .. " " .. tostring(reducedBacklightBrightness))
+		end
+-----------------------------------------------------------------------------------------
 		--todo: also pause/power off local player since local player might be playing and not be the current player
 		appletManager:callService("activateScreensaver", isServerRequest)
 	elseif _softPowerState == "on" then
@@ -215,7 +240,14 @@ function JiveMain:setSoftPowerState(softPowerState, isServerRequest)
 			end
 			currentPlayer:setPower(true, nil, isServerRequest)
 		end
-
+-----------------------------------------------------------------------------------------
+		if isPiDisplay ~= nil then 
+			_write("/sys/class/backlight/rpi_backlight/brightness", backlightBrightness)
+--Generic brightness script
+		elseif _file_exists(lcdscript) then
+			os.execute(lcdscript .. " " .. tostring(backlightBrightness))
+		end
+-----------------------------------------------------------------------------------------
 		appletManager:callService("deactivateScreensaver")
 		appletManager:callService("restartScreenSaverTimer")
 
@@ -224,6 +256,34 @@ function JiveMain:setSoftPowerState(softPowerState, isServerRequest)
 	end
 end
 
+-----------------------------------------------------------------------------------------
+function _write(file, val)
+	local fh, err = io.open(file, "w")
+	if err then
+		return
+	end
+	fh:write(val)
+	fh:close()
+end
+
+function _read(file)
+	local fh, err = io.open(file, "r")
+	if err then
+		return nil
+	end
+	local fc = fh:read("*all")
+	fh:close()
+	return fc
+end
+
+--Function needed for
+--Generic brightness script
+function _file_exists(name)
+   local f=io.open(name,"r")
+   if f~=nil then io.close(f) return true else return false end
+end
+-----------------------------------------------------------------------------------------
+
 function JiveMain:togglePower()
 	local powerState = JiveMain:getSoftPowerState()
 	if powerState == "off" then
@@ -655,7 +715,6 @@ function JiveMain:getDefaultSkin()
 	return _defaultSkin or "QVGAportraitSkin"
 end
 
-
 -----------------------------------------------------------------------------
 -- main()
 -----------------------------------------------------------------------------
